
package software.xdev.swagger_rapidclipse.ui;

import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.UI;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.button.ButtonVariant;
import com.vaadin.flow.component.icon.VaadinIcon;
import com.vaadin.flow.component.orderedlayout.FlexComponent;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.server.VaadinRequest;


@Route("")
public class MainLayout extends VerticalLayout
{
	private String baseUrl = "http://localhost:8080";
	
	public MainLayout()
	{
		super();

		// Get prefix
		baseUrl += VaadinRequest.getCurrent().getContextPath();

		this.initUI();
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #button}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button_onClick(final ClickEvent<Button> event)
	{
		UI.getCurrent().getPage().setLocation(baseUrl + "/swagger-ui/index.html");
	}

	/**
	 * Event handler delegate method for the {@link Button} {@link #button2}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button2_onClick(final ClickEvent<Button> event)
	{
		this.navigateToApi();
	}

	/**
	 * Event handler delegate method for the {@link Button} {@link #button3}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button3_onClick(final ClickEvent<Button> event)
	{
		this.navigateToApi();
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #button4}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button4_onClick(final ClickEvent<Button> event)
	{
		this.navigateToApi();
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #button5}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button5_onClick(final ClickEvent<Button> event)
	{
		this.navigateToApi();
	}
	
	private void navigateToApi()
	{
		UI.getCurrent().getPage().setLocation(baseUrl + "/api/beverage");
		
	}
	
	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.button  = new Button();
		this.button2 = new Button();
		this.button3 = new Button();
		this.button4 = new Button();
		this.button5 = new Button();

		this.setJustifyContentMode(FlexComponent.JustifyContentMode.CENTER);
		this.setDefaultHorizontalComponentAlignment(FlexComponent.Alignment.CENTER);
		this.getStyle().set("background", "radial-gradient(circle, rgba(126,114,177,1) 0%, rgba(48,39,87,1) 100%)");
		this.button.setText("Open Swagger UI");
		this.button.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
		this.button.setIcon(VaadinIcon.EXTERNAL_LINK.create());
		this.button2.setText("Call GET Endpoint");
		this.button2.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
		this.button2.setIcon(VaadinIcon.EXTERNAL_LINK.create());
		this.button3.setText("Call POST Endpoint");
		this.button3.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
		this.button3.setIcon(VaadinIcon.EXTERNAL_LINK.create());
		this.button4.setText("Call PUT Endpoint");
		this.button4.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
		this.button4.setIcon(VaadinIcon.EXTERNAL_LINK.create());
		this.button5.setText("Call DELETE Endpoint");
		this.button5.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
		this.button5.setIcon(VaadinIcon.EXTERNAL_LINK.create());

		this.button.setSizeUndefined();
		this.button2.setSizeUndefined();
		this.button3.setSizeUndefined();
		this.button4.setSizeUndefined();
		this.button5.setSizeUndefined();
		this.add(this.button, this.button2, this.button3, this.button4, this.button5);
		this.setSizeFull();

		this.button.addClickListener(this::button_onClick);
		this.button2.addClickListener(this::button2_onClick);
		this.button3.addClickListener(this::button3_onClick);
		this.button4.addClickListener(this::button4_onClick);
		this.button5.addClickListener(this::button5_onClick);
	} // </generated-code>
	
	// <generated-code name="variables">
	private Button button, button2, button3, button4, button5;
	// </generated-code>

}
